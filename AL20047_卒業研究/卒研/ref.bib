@article{StandardML,
  author = {Miler, Robin and Tofte, Mads and Harper, Robert and MacQueen, David},
  title = {\textit{The Definition of Standard ML (Revised)}},
  year = {1997}
}

@article{useIDE,
  author          = {Murphy, Gail and Kersten, Mik},
  title           = {How Are {J}ava Software Developers Using the {E}clipse {IDE}?},
  number          = {4},
  volume          = {23},
  pages           = {76-83},
  journal         = {IEEE Software},
  year            = {2006},
}

@article{SASANO2023102957,
title = {A text-based syntax completion method using {LR} parsing and its evaluation},
journal = {Science of Computer Programming},
volume = {228},
pages = {102957},
year = {2023},
issn = {0167-6423},
doi = {https://doi.org/10.1016/j.scico.2023.102957},
url = {https://www.sciencedirect.com/science/article/pii/S0167642323000394},
author = {Isao Sasano and Kwanghoon Choi},
keywords = {Syntax completion, LR parsing, Sentential forms, Reduction, Integrated development environments},
abstract = {This paper presents a text-based syntax completion method that uses an LR parser. We propose formal definitions of candidate text to be completed based on the sentential forms. Moreover, we design basic algorithms for computing candidate texts through reductions in the LR parsing. This is unlike most existing methods, wherein the definition of candidates that are intended to be generated are given informally. In addition, this is unlike grammar transformation approaches that use LR parsers and is a currently burdensome task. The proposed method allows LR parsers to be adopted without modification and a syntax completion system to be built without incurring efforts. For practical purposes, we extended the basic algorithms using a new definition of refined candidates and a new strategy. The extended algorithms can compute more useful candidates for realistic programming language grammars than those of existing ones; Further, we implemented the algorithms on an Emacs server to demonstrate the feasibility of their application. We evaluated the extended algorithm with three real-world programming languages, Small Basic, C, and Haskell. The extended algorithm computes half of all candidates in less than or equal to 0.2 seconds and 89.2% in approximately one second in the evaluation while computing the remaining candidates took a long time. We discuss its evaluation in detail.}
}


@misc{bison,
  howpublished = {\url{https://www.gnu.org/software/bison/manual/}},
  title        = {{GNU Bison - The Yacc-compatible Parser Generator}},
}

@misc{flex,
  howpublished = {\url{http://gnu.ist.utl.pt/software/flex/flex.html}},
  title        = {{Flex - the GNU project}},
}

@misc{lsp,
  howpublished = {\url{https://microsoft.github.io/language-server-protocol/}},
  title        = {{Language Server Protocol}},
}

@misc{vscode,
  howpublished = {\url{https://code.visualstudio.com/}},
  title        = {{Visual Studio Code - Code Editing. Redefined.}},
}

@article{eff,
  author          = {三浦 元喜},
  journal         = {教育システム情報学会誌},
  number          = {2},
  title           = {初学者向けProcessingプログラミング環境におけるコード補完機能の導入と実践},
  volume          = {37},
  pages           = {167-172},
  year            = {2020}
}

@article{hos,
  author          = {石原 知也 and 肥後 芳樹 and 楠本 真二},
  journal         = {電子情報通信学会論文誌},
  number          = {4},
  title           = {書き忘れたコードに対するコード補完について},
  pages           = {415-427},
  year            = {2016}
}

@article{fes,
  author          = {松永 智將 and 千葉 滋},
  journal         = {日本ソフトウェア科学会},
  number          = {4},
  volume          = {36},
  title           = {機械学習手法を用いた動的型付け言語のコード補完に向けて},
  pages           = {57-62},
  year            = {2019}
}

@article{klio,
  author          = {山本哲男},
  journal         = {情報処理学会論文誌},
  number          = {2},
  volume          = {54},
  title           = {ソースコードコーパスを利用したメソッド呼び出し文補完手法},
  pages           = {903-911},
  year            = {2013}
}

@article{fjei,
  author          = {福本大介 and 平尾俊貴 and 藤原賢二 and 飯田 元},
  journal         = {電子情報通信学技報},
  number          = {416},
  volume          = {121},
  title           = {開発プロジェクトのドメインに特化したRoBERTaによるコード補完モデルの提案},
  pages           = {49-53},
  year            = {2022}
}


@article{sato,
  author = {直輝, 佐藤},
  title = {{Standard ML}に対する構文誤りを許すコード補完機能の実装},
  journal = {芝浦工業大学情報工学科卒業論文},
  year = {2022年度},
}

@article{chubati,
  author          = {中鉢欣秀},
  title           = {ソフトウエア開発演習のための仮想環境の構築と今後の展望},
  number          = {13},
  volume          = {20},
  pages           = {93-98},
  journal         = {産業技術大学院大学研究論文},
  year            = {2019},
}



















